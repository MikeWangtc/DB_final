dbrp "printer"."autogen"

// This TICKscript monitors the three temperatures for a 3d printing job,
// and triggers alerts if the temperatures start to experience abnormal behavior.

// Select the temperatures measurements
var data = stream
    |from()
        .measurement('temperatures')
    |window()
        .period(10s)
        .every(10s)

data
    //Run our tTest UDF on the hotend temperature
    @tTest()
        // specify the hotend field
        .field('hotend')
        // Keep a 1h rolling window
        .size(3600)
        .detector_type('ttest')
        .detector_params('{"alpha": 0.001}')
    |alert()
        .id('hotend')
        .crit(lambda: "is_anomaly")
        .log('/tmp/kapacitor_udf/hotend_failure.log')

data
    @tTest()
        .field('bed')
        .size(3600)
        .detector_type('spectral_residual')
        .detector_params('{"q": 50, "z": 50}')
    |alert()
        .id('bed')
        .crit(lambda: "is_anomaly")
        .log('/tmp/kapacitor_udf/bed_failure.log')


// store data to influxdb
data
    |influxDBOut()
        .create()
        .database('Mike')
        .retentionPolicy('autogen')
        .measurement('temperatures')
        .tag('hotend', 'a')
        .tag('bed', 'b')
